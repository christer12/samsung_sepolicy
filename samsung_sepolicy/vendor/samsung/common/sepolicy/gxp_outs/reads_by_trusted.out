allow mediaserver at_distributor:fd use;
allow mediaserver init:unix_stream_socket { getattr read write };
allow mediaserver system:unix_stream_socket { read write setopt };
allow mediaserver untrusteddomain:unix_stream_socket { read write getattr connectto };
allow mediaserver video_device:dir search;
allow mediaserver asec_apk_file:dir search;
allow mediaserver radio_data_file:dir search;
allow mediaserver ashmem_device:chr_file execute;
allow mediaserver kgsl_device:chr_file { rw_file_perms execute };
allow mediaserver drm_security_system_file:dir search;
allow init kernel:key { view read search };
allow init sysfs_type:dir_file_class_set relabelfrom;
allow init { dev_type -kmem_device }:dir_file_class_set relabelfrom;
allow init block_device:blk_file relabelfrom;
allow init emmcblk_device:blk_file { relabelfrom setattr };
allow init vold_data_file:dir { open create read getattr setattr search ioctl };
allow init security_file:dir ~{ rename write add_name remove_name rmdir };
allow init system_fifo:dir { relabelfrom relabelto  create_dir_perms };
allow init ashmem_device:chr_file execute;
allow init security_file:dir relabelfrom ;
allow init security_file:file relabelfrom;
allow init { ap_device asec_apk_file efs_file hidden_file persdata_data_file storage_file system_data_file usb_device sec_efs_file }:dir mounton;
allow init device:file relabelfrom;
allow init secure_storage_device:dir relabelfrom;
allow init kmsg_device:chr_file { open read relabelto setattr };
allow init sdcardd_exec:file getattr;
allow init { dev_type -kmem_device }:lnk_file { read open setattr };
allow init configfs:dir { create_dir_perms mounton };
allow init { dev_type -kmem_device }:file { read open setattr };
allow init omr_file:dir mounton;
allow zygote at_distributor:fd use;
allow zygote init:unix_stream_socket { read write };
allow zygote platform_app:process ptrace;
allow zygote samsung_app:process ptrace;
allow zygote media_rw_data_file:dir { create_dir_perms mounton };
allow zygote shell_data_file:dir { r_dir_perms mounton };
allow zygote system_data_file:dir { create_dir_perms mounton };
allow zygote zygote_exec:file { open execute_no_trans };
allow zygote media_rw_data_file:dir { create_dir_perms mounton};
allow zygote ashmem_device:chr_file execute;
allow zygote shell_data_file:file { write getattr };
allow zygote container_app_data_backend:dir { rw_dir_perms mounton setattr };
allow zygote container_app_data_file:dir { create_dir_perms mounton };
allow zygote container_app_sdcard_file:dir mounton;
allow zygote containerdomain:fd use;
allow zygote containerdomain:process { dyntransition getpgid setpgid };
allow adbd functionfs:file { read write ioctl open };
allow adbd graphics_device:dir search;
allow adbd at_distributor_exec:file getattr;
allow adbd bintvoutservice_exec:file getattr;
allow adbd system_file:lnk_file getattr;
allow adbd input_device:chr_file { read write open };
allow debuggerd container_app_data_backend:dir search;
allow debuggerd container_app:lnk_file read;
allow debuggerd container_app:process getattr;
allow debuggerd domain:process getattr;
allow debuggerd self:netlink_route_socket { write getattr setopt read bind create nlmsg_read };
allow debuggerd wpa:lnk_file read;
allow debuggerd selinuxfs:dir { read search } ;
allow debuggerd selinuxfs:file { getattr open read };
allow dumpstate qseecom_device:chr_file { read write ioctl open };
allow gatekeeperd qseecom_device:chr_file { read write ioctl open };
allow gatekeeperd efs_file:dir search;
allow gatekeeperd prov_efs_file:dir { write search add_name };
allow gatekeeperd prov_efs_file:file { write read create open };
allow gpsd system:unix_stream_socket { read write setopt };
allow healthd init:unix_stream_socket { read write };
allow healthd system_app:fd use;
allow hostapd netd:fifo_file { read write };
allow installd dalvikcache_data_file:dir relabelfrom;
allow installd { data_file_type -trstdomain_no_read_file -trstdomain_no_write_file }:dir { relabelfrom relabelto };
allow installd { data_file_type -trstdomain_no_write_file -vold_data_file }:{ file_class_set } { getattr unlink };
allow installd vold_data_file:{ chr_file blk_file } { getattr unlink };
allow installd unlabeled:{ file_class_set } { getattr read open unlink };
allow installd { app_data_type system_data_file }:dir { create_dir_perms relabelfrom relabelto };
allow installd { app_data_type system_data_file }:lnk_file { create setattr getattr unlink rename relabelfrom relabelto };
allow installd app_data_type:{ file sock_file fifo_file } { getattr unlink rename relabelfrom relabelto setattr };
allow installd system_data_file:{ sock_file fifo_file } { getattr unlink rename relabelfrom relabelto setattr };
allow installd system_data_file:file { getattr unlink relabelfrom };
allow installd container_app:fd use;
allow installd appdomain:fd use;
allow installd container_app_data_backend:dir { relabelto relabelfrom create_dir_perms };
allow installd container_app_data_backend:file { relabelto relabelfrom create_file_perms};
allow installd container_app_data_backend:lnk_file { relabelto relabelfrom create_file_perms};
allow kernel shell_exec:file { getattr open read execute };
allow shell shell_exec:file { entrypoint open read execute getattr };
allow kernel mediaserver:fd use;
allow kernel sysfs_sec:file { read open };
allow kernel sysfs_lcd_writable:file { read open };
allow kernel device:chr_file { getattr create setattr };
allow kernel platform_app:fd use;
allow kernel system_app:fd use;
allow kernel isolated_app:fd use;
allow kernel sysfs_type:dir_file_class_set { relabelfrom relabelto };
allow kernel tmpfs:dir_file_class_set { relabelfrom relabelto };
allow kernel obb_apk_file:file read;
allow keystore domain:fd use;
allow keystore init:unix_stream_socket { read write connectto };
allow netd init:tcp_socket { read write setopt getopt };
allow netd app_data_file:file read;
allow netd netdomain:unix_stream_socket {read write getattr setattr getopt setopt};
allow rild eris:tun_socket relabelfrom;
allow rild init:tun_socket relabelfrom;
allow rild system_app:dir search;
allow rild vpnclientd:tun_socket relabelfrom;
allow rild ashmem_device:chr_file execute;
allow rild self:packet_socket { read create ioctl };
allow rild system_app:dir search; 
allow rild self:netlink_kobject_uevent_socket read;
allow rild self:packet_socket { read create ioctl };
allow sdcardd sdcard_type:dir mounton;
allow sdcardd qseecom_device:chr_file { read write };
allow sdcardd container_app_data_backend:dir { create_dir_perms mounton };
allow sdcardd vold:netlink_socket { read write };
allow ueventd sysfs:dir { relabelfrom relabelto setattr };
allow ueventd sysfs:file { relabelfrom relabelto };
allow ueventd sysfs_type:file { relabelfrom relabelto };
allow ueventd emmcblk_device:blk_file { read open };
allow ueventd device:lnk_file { getattr link unlink rename };
allow ueventd rootfs:file entrypoint;
allow vold sdcard_type:filesystem relabelfrom;
allow vold device:chr_file  {create setattr ioctl lock append execute link rename };
allow vold asec_apk_file:dir { create_dir_perms mounton relabelto };
allow vold asec_image_file:dir { mounton create } ;
allow vold obb_apk_file:dir { create_dir_perms mounton };
allow vold storage_file:dir mounton;
allow vold storage_stub_file:dir { write relabelfrom add_name };
allow vold system_data_file:lnk_file { getattr link unlink rename };
allow vold unlabeled:dir { r_dir_perms relabelfrom };
allow vold unlabeled:file relabelfrom;
allow vold unlabeled:filesystem { mount unmount relabelfrom };
allow vold unlabeled:lnk_file relabelfrom;
allow vold domain:process getattr;
allow vold container_app:fd use;
allow vold untrusted_app:fd use;
allow vold labeledfs:filesystem relabelfrom;
allow vold container_app_data_backend:dir { create_dir_perms mounton };
allow vold container_app_data_file:filesystem { relabelfrom relabelto mount unmount };
allow vold container_app_data_file:lnk_file read;
allow vold container_app_sdcard_file:filesystem { relabelfrom relabelto mount unmount };
allow vold media_rw_data_file:dir mounton;
allow vold container_app_data_file:lnk_file getattr;
allow vold { container_app_data_backend media_rw_data_file system_data_file app_data_type } :dir { relabelfrom relabelto };
allow vold { container_app_data_backend media_rw_data_file system_data_file app_data_type } :lnk_file { relabelfrom relabelto getattr unlink };
allow vold { container_app_data_backend media_rw_data_file app_data_type } :file { relabelfrom relabelto getattr unlink };
allow vold system_data_file:file { relabelto getattr };
allow vold { container_app_data_backend media_rw_data_file system_data_file app_data_type } :dir { write getattr rmdir read remove_name open };
allow vold mnt_user_file:dir { relabelfrom relabelto mounton };
allow vold mnt_user_file:{ file lnk_file } { relabelfrom relabelto };
allow binderservicedomain dumpstate:fd use;
allow binderservicedomain dumpstate:unix_stream_socket { read write getopt getattr };
allow binderservicedomain shell_data_file:file { getattr write };
allow binderservicedomain appdomain:fd use;
allow bootanim surfaceflinger:fd use;
allow drmserver init:unix_stream_socket { connectto read write };
allow drmserver asec_apk_file:file { read write getattr };
allow drmserver container_app:fd use;
allow drmserver at_distributor:fd use;
allow mediaserver at_distributor:fd use;
allow mediaserver init:unix_stream_socket { getattr read write };
allow mediaserver system:unix_stream_socket { read write setopt };
allow mediaserver untrusteddomain:unix_stream_socket { read write getattr connectto };
allow mediaserver video_device:dir search;
allow mediaserver asec_apk_file:dir search;
allow mediaserver radio_data_file:dir search;
allow mediaserver ashmem_device:chr_file execute;
allow mediaserver kgsl_device:chr_file { rw_file_perms execute };
allow mediaserver drm_security_system_file:dir search;
allow shell app_data_file:dir search;
allow non_system_app_set devpts:chr_file { getattr read write ioctl };
allow adbd app_data_file:dir search;
allow servicemanager edmaudit:process getattr;
allow servicemanager security_file:file { read open };
allow surfaceflinger containerdomain:fd use;
allow surfaceflinger shell:dir search;
allow surfaceflinger vold:dir search;
allow surfaceflinger devpts:chr_file { read write };
allow surfaceflinger bootanim:fd use;
allow surfaceflinger domain:dir  { getattr search };
allow surfaceflinger domain:lnk_file read;
allow surfaceflinger mediaserver:fd use;
allow surfaceflinger nfc:fd use;
allow surfaceflinger radio:fd use;
allow surfaceflinger system:fd use;
allow surfaceflinger bluetooth:fd use;
allow surfaceflinger kgsl_device:chr_file { rw_file_perms execute };
allow system_server { bluetooth_data_file nfc_data_file shell_data_file app_data_file }:file { getattr read ioctl lock };
allow system_server appdomain:process getsched;
allow system_server at_distributor:fd use;
allow system_server bluetooth:unix_stream_socket { getattr getopt read write shutdown };
allow system_server container_app:unix_stream_socket { read write };
allow system_server domain:{ tcp_socket udp_socket } getattr;
allow system_server domain:process getattr;
allow system_server init:fifo_file { read write };
allow system_server init:fifo_file read;
allow system_server init:process getsched;
allow system_server init:unix_stream_socket { getopt getattr setopt read write };
allow system_server kernel:process { getsched setsched };
allow system_server kernel:key search;
allow system_server mediaserver_tmpfs:fd use;
allow system_server platform_app:udp_socket getopt;
allow system_server sensorhubservice:fd use;
allow system_server sensorhubservice:fifo_file read;
allow system_server zygote:process { signal sigkill getsched };
allow system_server sdcard_type:dir { create reparent rename rmdir setattr getattr search ioctl add_name remove_name }; 
allow system_server { dev_type -trstdomain_no_rw_device }:devfile_class_set getattr;
allow system_server io_device:chr_file { read open ioctl };
allow system_server app_data_file:dir relabelfrom;
allow system_server app_data_file:file execute;
allow system_server app_library_file:dir { create_dir_perms relabelto relabelfrom };
allow system_server { exec_type -dex2oat_exec - su_exec}:file execute;
allow system_server { file_type -trstdomain_no_read_file -trstdomain_no_write_file  -exec_type }:dir { relabelto relabelfrom };
allow system_server { file_type -trstdomain_no_read_file -trstdomain_no_write_file  -exec_type }:file { relabelto relabelfrom };
allow system_server wpa_socket:sock_file { getattr link unlink rename };
allow system_server app_data_file:dir relabelfrom;
allow system_server dalvikcache_data_file:file execute;
allow system_server platform_app_data_file:dir relabelfrom;
allow system_server app_data_file:file { create rename setattr unlink getattr read ioctl lock append write };
allow system_server containerdomain:process { getattr getsched setsched sigkill signal };
allow system_server containerdomain:{ tcp_socket udp_socket } { setopt read write getopt };
allow system_server container_app_data_file:dir { create_dir_perms relabelfrom };
allow system_server container_app_data_file:file { create_file_perms relabelfrom };
allow system_server unlabeled:dir { rmdir setattr rw_dir_perms link unlink rename };
allow system_server secstarter:lnk_file read;
allow system_server kgsl_device:chr_file { rw_file_perms execute };
allow system_server self:netlink_route_socket { write getattr setopt };
allow system_server self:rawip_socket { getopt create setopt };
allow system_server self:rawip_socket { write read };
allow system_server users_system_data_file:{ dir file } relabelfrom;
allow system_server knox_clipboard_file:{ dir file lnk_file } { relabelfrom relabelto };
allow tee rootfs:file entrypoint;
allow toolbox efsblk_device:blk_file getattr;
allow toolbox emmcblk_device:blk_file getattr;
allow toolbox modem_device:blk_file getattr;
allow toolbox systemblk_device:blk_file getattr;
allow toolbox userdatablk_device:blk_file getattr;
allow toolbox cache_block_device:blk_file getattr;
