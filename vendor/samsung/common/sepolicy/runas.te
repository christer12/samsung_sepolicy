#
# runas
#

############ aosp and sec_common #############
########## type and macro.
# for B2C users
#typeattribute runas trusteddomain;
#typeattribute runas system_domain;
# temporary permissive to gather the log.
# permissive runas;

########## self and domain_type
#neverallow Google CTS-android-m-preview: neverallow runas self:capability ~{ setuid setgid }
#allow runas self:capability dac_read_search;

########## fs_type
########## dev_type
########## file_type
########## etc_type
########## known issue.
# ndk-gdb invokes adb shell ps to find the app PID.
r_dir_file(shell, non_system_app_set)

# ndk-gdb invokes adb shell ls to check the app data dir.
allow shell app_data_file:dir search;

# ndk-gdb invokes adb shell kill -9 to kill the gdbserver.
allow shell non_system_app_set:process sigkill;

# run-as runs lib/gdbserver from the app data dir.
allow non_system_app_set system_data_file:file rx_file_perms;

# gdbserver reads the zygote.
allow non_system_app_set zygote_exec:file r_file_perms;

# (grand)child death notification.
allow non_system_app_set shell:process sigchld;
allow non_system_app_set adbd:process sigchld;

# child shell or gdbserver pty access.
allow non_system_app_set devpts:chr_file { getattr read write ioctl };

# gdbserver creates a socket in the app data dir.
allow { non_system_app_set -good_app } app_data_file:sock_file { create unlink };

# ndk-gdb invokes adb forward to forward the gdbserver socket.
allow adbd app_data_file:dir search;
allow adbd app_data_file:sock_file write;
allow adbd non_system_app_set:unix_stream_socket connectto;

# ndk-gdb invokes adb pull of app_process, linker, and libc.so.
allow adbd zygote_exec:file r_file_perms;
allow adbd system_file:file r_file_perms;


############ avc_log #############


